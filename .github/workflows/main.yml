name: Frontend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend # Assumes your frontend code is in a 'frontend' directory

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Specify your Node.js version

    - name: Install dependencies
      run: npm ci # Use npm ci for clean installs in CI environments

    - name: Run linting
      run: npm run lint # Assumes you have a 'lint' script in package.json

    - name: Run tests
      run: npm test -- --coverage # Run tests, optionally with coverage

    - name: Build frontend
      run: npm run build # Build your production-ready frontend assets

    # Optional: Deploy to GitHub Pages (example)
    # This step assumes your build output is in a 'build' directory within 'frontend'
    # and you want to deploy it to a 'gh-pages' branch.
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' # Only deploy on main branch pushes
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./frontend/build # Directory containing your built frontend
        # You might need to add a .nojekyll file to the publish_dir if using React Router etc.
        # cname: example.com # Uncomment if you have a custom domain
